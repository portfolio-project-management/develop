{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\develop\\\\portfoliofront\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Typography from './modules/components/Typography';\nimport AppFooter from './modules/views/AppFooter';\nimport AppAppBar from './modules/views/AppAppBar';\nimport AppForm from './modules/views/AppForm';\nimport { email, required } from './modules/form/validation';\nimport RFTextField from './modules/form/RFTextField';\nimport FormButton from './modules/form/FormButton';\nimport FormFeedback from './modules/form/FormFeedback';\nimport withRoot from './modules/withRoot';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SERVER_URL } from '../Link';\nimport { Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, TextField } from '@mui/material';\nimport AppBarCustom from './modules/components/AppBarCustom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [sent, setSent] = React.useState(false);\n  const [user, setUser] = React.useState({\n    userId: \"\",\n    passWord: \"\",\n    passWordCheck: \"\",\n    email: \"\",\n    emailCheck: false,\n    name: \"\"\n  });\n  const navigate = useNavigate();\n  const [otp, setOTP] = React.useState();\n  const [checkOTP, setCheckOTP] = React.useState();\n  const [openEmailAccess, setOpenEmaillAccess] = React.useState(false);\n  const params = useParams();\n  const validate = values => {\n    const errors = required(['firstName', 'lastName', 'email', 'password'], values);\n    if (!errors.email) {\n      const emailError = email(values.email);\n      if (emailError) {\n        errors.email = emailError;\n      }\n    }\n    return errors;\n  };\n  React.useEffect(() => {\n    if (params.hash !== undefined) {\n      // 해시 파라미터가 존재할 때\n      fetch(SERVER_URL + \"user/checkemail?hash=\" + params.hash).then(response => response.text()).then(data => {\n        if (data === \"정보없음\") {\n          // 정상진행\n        } else {\n          setUser({\n            ...user,\n            email: data,\n            emailCheck: true\n          });\n        }\n      }).catch(error => console.log(error));\n    }\n  });\n  const handleSubmit = () => {\n    setSent(true);\n  };\n  function handleOnChange(e) {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleTrySignUP() {\n    if (user.name === \"\") {\n      alert(\"이름을 입력해 주세요\");\n    } else if (user.userId === \"\") {\n      alert(\"아이디를 입력해 주세요\");\n    } else if (user.passWord === \"\") {\n      alert(\"비밀번호를 입력해 주세요\");\n    } else if (user.passWord !== user.passWordCheck) {\n      alert(\"비밀번호와 비밀번호 확인이 다릅니다\");\n    } else if (user.emailCheck !== true) {\n      alert(\"이메일 인증을 진행해 주세요\");\n    } else {\n      // 회원가입 시도\n      fetch(SERVER_URL + \"user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(response => response.text()).then(data => {\n        alert(data);\n        if (data === \"성공\") {\n          navigate('/signin');\n        } else if (data === \"실패\") {\n          setUser({\n            userId: \"\",\n            passWord: \"\",\n            passWordCheck: \"\",\n            email: \"\",\n            emailCheck: false,\n            name: \"\"\n          });\n        }\n      }).catch(error => console.log(error));\n    }\n  }\n  function handleAccessEmail() {\n    //이메일 인증 시도\n    setUser({\n      ...user,\n      email: \"\"\n    });\n    setCheckOTP();\n    setOpenEmaillAccess(true);\n  }\n  function handleOnChangeOTP(e) {\n    setOTP(e.target.value);\n  }\n  function handleSendOTP() {\n    if (user.email === \"\") {\n      alert(\"이메일을 입력해 주세요\");\n    } else {\n      fetch(SERVER_URL + \"user/sendotp\").then(response => response.text()).then(data => {\n        alert(\"OTP : \" + data);\n        console.log(data);\n        setCheckOTP(data);\n\n        //임시\n        setOTP(data);\n      }).catch(error => console.log(error));\n    }\n  }\n  function handleCheckOTP() {\n    if (checkOTP === otp && checkOTP !== undefined) {\n      alert(\"인증이 완료되었습니다\");\n      setUser({\n        ...user,\n        emailCheck: true\n      });\n      setOpenEmaillAccess(false);\n    } else {\n      alert(\"OTP가 일치하지 않습니다\");\n      setOTP();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEmailAccess,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D \\uC9C4\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC774\\uBA54\\uC77C \\uC785\\uB825\",\n          type: \"text\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"OTP \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"OTP \\uC785\\uB825\",\n          type: \"text\",\n          value: otp,\n          onChange: handleOnChangeOTP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendOTP,\n          children: \"OTP \\uBC1B\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckOTP,\n          children: \"\\uC778\\uC99D\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBarCustom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppForm, {\n      children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          gutterBottom: true,\n          marked: \"center\",\n          align: \"center\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/signin\",\n            underline: \"always\",\n            children: \"\\uC774\\uBBF8 \\uD68C\\uC6D0\\uC774\\uC2E0\\uAC00\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        subscription: {\n          submitting: true\n        },\n        validate: validate,\n        children: ({\n          handleSubmit: handleSubmit2,\n          submitting\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit2,\n          noValidate: true,\n          sx: {\n            mt: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"name\",\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"name\",\n            value: user.name // `user.name`을 직접 사용\n            ,\n            onChange: handleOnChange // 상태 업데이트 함수 사용\n            ,\n            disabled: submitting || sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"userId\",\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"userId\",\n            value: user.userId // `user.name`을 직접 사용\n            ,\n            onChange: handleOnChange // 상태 업데이트 함수 사용\n            ,\n            disabled: submitting || sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"password\",\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"passWord\",\n            type: \"password\",\n            value: user.passWord // `user.name`을 직접 사용\n            ,\n            onChange: handleOnChange // 상태 업데이트 함수 사용\n            ,\n            disabled: submitting || sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"password_check\",\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"passWordCheck\",\n            type: \"password\",\n            value: user.passWordCheck // `user.name`을 직접 사용\n            ,\n            onChange: handleOnChange // 상태 업데이트 함수 사용\n            ,\n            disabled: submitting || sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            disabled: true,\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: user.emailCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 26\n            }, this),\n            label: user.emailCheck ? user.email : \"이메일 인증을 진행해 주세요\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            disabled: submitting || sent,\n            color: \"info\",\n            fullWidth: true,\n            onClick: handleAccessEmail,\n            children: submitting || sent ? 'In progress…' : '이메일 인증'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormSpy, {\n            subscription: {\n              submitError: true\n            },\n            children: ({\n              submitError\n            }) => submitError ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n              error: true,\n              sx: {\n                mt: 2\n              },\n              children: submitError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            disabled: submitting || sent,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: handleTrySignUP,\n            children: submitting || sent ? 'In progress…' : '회원가입'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"PXD8T2Hy8ldA8xw4bwekU+3WLsw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = SignUp;\nexport default _c2 = withRoot(SignUp);\nvar _c, _c2;\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Box","Link","Field","Form","FormSpy","Typography","AppFooter","AppAppBar","AppForm","email","required","RFTextField","FormButton","FormFeedback","withRoot","useParams","useNavigate","SERVER_URL","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","FormControlLabel","TextField","AppBarCustom","jsxDEV","_jsxDEV","SignUp","_s","sent","setSent","useState","user","setUser","userId","passWord","passWordCheck","emailCheck","name","navigate","otp","setOTP","checkOTP","setCheckOTP","openEmailAccess","setOpenEmaillAccess","params","validate","values","errors","emailError","useEffect","hash","undefined","fetch","then","response","text","data","catch","error","console","log","handleSubmit","handleOnChange","e","target","value","handleTrySignUP","alert","method","headers","body","JSON","stringify","handleAccessEmail","handleOnChangeOTP","handleSendOTP","handleCheckOTP","Fragment","children","open","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","onClick","variant","gutterBottom","marked","align","href","underline","onSubmit","subscription","submitting","handleSubmit2","component","noValidate","sx","mt","label","fullWidth","margin","disabled","control","checked","mb","color","submitError","_c","_c2","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/develop/portfoliofront/src/pages/SignUp.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport { Field, Form, FormSpy } from 'react-final-form';\r\nimport Typography from './modules/components/Typography';\r\nimport AppFooter from './modules/views/AppFooter';\r\nimport AppAppBar from './modules/views/AppAppBar';\r\nimport AppForm from './modules/views/AppForm';\r\nimport { email, required } from './modules/form/validation';\r\nimport RFTextField from './modules/form/RFTextField';\r\nimport FormButton from './modules/form/FormButton';\r\nimport FormFeedback from './modules/form/FormFeedback';\r\nimport withRoot from './modules/withRoot';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { SERVER_URL } from '../Link';\r\nimport { Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, TextField } from '@mui/material';\r\n\r\nimport AppBarCustom from './modules/components/AppBarCustom'; \r\n\r\nfunction SignUp() {\r\n  const [sent, setSent] = React.useState(false);\r\n  const [ user, setUser ] = React.useState({\r\n    userId:\"\",\r\n    passWord:\"\",\r\n    passWordCheck:\"\",\r\n    email:\"\",\r\n    emailCheck:false,\r\n    name:\"\"\r\n  })\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [otp, setOTP] = React.useState();\r\n  const [checkOTP, setCheckOTP] = React.useState();\r\n\r\n  const [ openEmailAccess, setOpenEmaillAccess] = React.useState(false);\r\n  \r\n  const params = useParams();\r\n\r\n  const validate = (values) => {\r\n    const errors = required(['firstName', 'lastName', 'email', 'password'], values);\r\n\r\n    if (!errors.email) {\r\n      const emailError = email(values.email);\r\n      if (emailError) {\r\n        errors.email = emailError;\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  \r\n    React.useEffect(() => {\r\n      if(params.hash !== undefined){ // 해시 파라미터가 존재할 때\r\n        fetch(SERVER_URL + \"user/checkemail?hash=\" + params.hash)\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            if(data === \"정보없음\"){\r\n                // 정상진행\r\n            }else{\r\n                setUser({\r\n                    ...user,\r\n                    email:data,\r\n                    emailCheck:true,\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n      }\r\n    });\r\n\r\n  const handleSubmit = () => {\r\n    setSent(true);\r\n  };\r\n\r\n  function handleOnChange(e) {\r\n    setUser({\r\n        ...user,\r\n        [e.target.name] : e.target.value,\r\n    })\r\n  }\r\n\r\n  function handleTrySignUP() {\r\n    if(user.name === \"\"){\r\n        alert(\"이름을 입력해 주세요\");\r\n    }else if(user.userId === \"\"){\r\n        alert(\"아이디를 입력해 주세요\");\r\n    }else if(user.passWord === \"\"){\r\n        alert(\"비밀번호를 입력해 주세요\");\r\n    }else if(user.passWord !== user.passWordCheck){\r\n        alert(\"비밀번호와 비밀번호 확인이 다릅니다\");\r\n    }else if(user.emailCheck !== true){\r\n        alert(\"이메일 인증을 진행해 주세요\");\r\n    }else{\r\n        // 회원가입 시도\r\n        fetch(SERVER_URL + \"user/signup\", {\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(user),\r\n        })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            alert(data);\r\n            if(data === \"성공\"){\r\n                navigate('/signin');\r\n            }else if(data === \"실패\"){\r\n              setUser({\r\n                  userId:\"\",\r\n                  passWord:\"\",\r\n                  passWordCheck:\"\",\r\n                  email:\"\",\r\n                  emailCheck:false,\r\n                  name:\"\"\r\n              });\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  function handleAccessEmail() {\r\n    //이메일 인증 시도\r\n    setUser({\r\n        ...user,\r\n        email:\"\",\r\n    })\r\n    setCheckOTP();\r\n    setOpenEmaillAccess(true);\r\n  }\r\n\r\n  function handleOnChangeOTP (e) {\r\n    setOTP(e.target.value);\r\n  }\r\n\r\n  function handleSendOTP () {\r\n    if(user.email === \"\"){\r\n        alert(\"이메일을 입력해 주세요\")\r\n    }else{\r\n        fetch(SERVER_URL + \"user/sendotp\")\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            alert(\"OTP : \" + data);\r\n            console.log(data);\r\n            setCheckOTP(data);\r\n\r\n            //임시\r\n            setOTP(data);\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  function handleCheckOTP () {\r\n    if(checkOTP === otp && checkOTP !== undefined){\r\n        alert(\"인증이 완료되었습니다\");\r\n        setUser({\r\n            ...user,\r\n            emailCheck:true,\r\n        })\r\n        setOpenEmaillAccess(false);\r\n    }else{\r\n        alert(\"OTP가 일치하지 않습니다\");\r\n        setOTP();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Dialog open={openEmailAccess}>\r\n          <DialogTitle>\r\n              <p>이메일 인증 진행</p>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n              <input placeholder='이메일 입력' type='text' name=\"email\" value={user.email} onChange={handleOnChange}></input>\r\n              <br></br>\r\n              <p>OTP 입력</p>\r\n              <input placeholder='OTP 입력' type='text' value={otp} onChange={handleOnChangeOTP}></input>\r\n          </DialogContent>\r\n          <DialogActions>\r\n              <button onClick={handleSendOTP}>OTP 받기</button>\r\n              <button onClick={handleCheckOTP}>인증확인</button>\r\n          </DialogActions>\r\n      </Dialog>\r\n\r\n      <AppBarCustom ></AppBarCustom>\r\n      <AppForm>\r\n        <React.Fragment>\r\n          <Typography variant=\"h3\" gutterBottom marked=\"center\" align=\"center\">\r\n            회원가입\r\n          </Typography>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            <Link href=\"/signin\" underline=\"always\">\r\n              이미 회원이신가요?\r\n            </Link>\r\n          </Typography>\r\n        </React.Fragment>\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          subscription={{ submitting: true }}\r\n          validate={validate}\r\n        >\r\n          {({ handleSubmit: handleSubmit2, submitting }) => (\r\n            <Box component=\"form\" onSubmit={handleSubmit2} noValidate sx={{ mt: 6 }}>\r\n              <TextField\r\n                label=\"name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name='name'\r\n                value={user.name}  // `user.name`을 직접 사용\r\n                onChange={handleOnChange}  // 상태 업데이트 함수 사용\r\n                disabled={submitting || sent}\r\n              />\r\n\r\n              <TextField\r\n                label=\"userId\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name='userId'\r\n                value={user.userId}  // `user.name`을 직접 사용\r\n                onChange={handleOnChange}  // 상태 업데이트 함수 사용\r\n                disabled={submitting || sent}\r\n              />\r\n\r\n              <TextField\r\n                label=\"password\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name='passWord'\r\n                type=\"password\"\r\n                value={user.passWord}  // `user.name`을 직접 사용\r\n                onChange={handleOnChange}  // 상태 업데이트 함수 사용\r\n                disabled={submitting || sent}\r\n              />\r\n\r\n              <TextField\r\n                label=\"password_check\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name='passWordCheck'\r\n                type=\"password\"\r\n                value={user.passWordCheck}  // `user.name`을 직접 사용\r\n                onChange={handleOnChange}  // 상태 업데이트 함수 사용\r\n                disabled={submitting || sent}\r\n              />\r\n              \r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox checked={user.emailCheck} />}\r\n                label={user.emailCheck ? user.email : \"이메일 인증을 진행해 주세요\"}\r\n              />\r\n              \r\n              <FormButton\r\n                sx={{ mt: 3, mb: 2 }}\r\n                disabled={submitting || sent}\r\n                color=\"info\"\r\n                fullWidth\r\n                onClick={handleAccessEmail}\r\n              >\r\n                {submitting || sent ? 'In progress…' : '이메일 인증'}\r\n              </FormButton>\r\n\r\n              <FormSpy subscription={{ submitError: true }}>\r\n                {({ submitError }) =>\r\n                  submitError ? (\r\n                    <FormFeedback error sx={{ mt: 2 }}>\r\n                      {submitError}\r\n                    </FormFeedback>\r\n                  ) : null\r\n                }\r\n              </FormSpy>\r\n              <FormButton\r\n                sx={{ mt: 3, mb: 2 }}\r\n                disabled={submitting || sent}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={handleTrySignUP}\r\n              >\r\n                {submitting || sent ? 'In progress…' : '회원가입'}\r\n              </FormButton>\r\n            </Box>\r\n          )}\r\n        </Form>\r\n      </AppForm>\r\n      <AppFooter />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRoot(SignUp);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}